/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// https://caksoylar.github.io/keymap-drawer?keymap_yaml=H4sIAAAAAAAC_61XbXPSQBD-zq84rRq1tJIABeLLSEOgVVqQpNa3GmmJwhgSJk2nU536291c9nJLw7U4I19277nnnk129-5CML6KLhKzxFgUJ9PIC_IxY-eLYJaYLIkvfD6Oo8tzk1W5fxYFF_MQhnU-TKYX81MYGXw0iaOFt5iFP6_Iag7OwtCPESxBLD8-T2N17G5qtthviKe908psCtbq9rRrDmvHWmZttCO0LtqPaI_Q7qMdoB1qJanfRv2-03VFAAeJHbRdtD20e2jfoH2Ltq9J3eegCznQTLA8wCgLIBkfROTj_UOMzHFL4O2-S_H3ArfcPsUPFHhZobN9M66cctu7ioeyD117hHMju0OnnGHbsnGqN1patesMxduMsqeAOeBk9dU0teHLtzCHHtV8ieCmqJZSRa7Rcc29YrH5vIHzrylYRXCDgjUEH1DwG4J_KAi_DL1P0QaCjyjYRPApBVsIPqZgBcEnIqviRbAB06pJ9gtFB9RR5aGic3Zw_qti_pVC11R3lu1Y_9hZVwvfZFM_mBBux-4vtRNEgElYdXdDrWtksK6-4mjoGuJMqAqnJpy6cHaE0xBOUzgtjQaoLEe4WcQswXSBrqhIVzeKM2R5Llrskxt55ltYpCNLrrfWjtUO2r0tccL2joZrJTp7czx1nb2Bq7ENdjwLN53p7Huy6aCcY40KsTbzWJ08XXYulscf7ff2BAittlxi68hVHcKD4UdFlw_bjmuvyPbe4EDcSJ3B8WEes7NW3ouF4IdnWgK4-kwVx_V0LXcN6ValW5NuXbo70m1It0lL_z821P-ils6i-WkE3weQhYXJPjfKTG-clNlPk9e6zAIA4cuhnF4vJ9eCpu8QHm8PJTNVbCIza5rbqEYNqbzUKqZRJUzeH0pmDZh1ZKY9UyDmzCYwW8j0JA-QsclOoySJ5mUWmayybeTyoK6L57A_7It3w81N1PUKqFeQ-YmoXy8xjBUMEl-Sa4S8u1KuDowqMg5XMlokNc_uZHxBxnLJWiTKs7sempKp3BI5Z1fJKz6-tRNz0SdKGi3UZyULcqaL9z0psjaYCGpAUF0tJ4m0pW9V1El__C4Q4fQOZ_4iSuJf_mnoQ7LYfDxPYxOJJqnW9doSJ9ryU-gi50721XpbDnSR-Duo9LTAb1fZbKtp2SdJoeGMNKHiOLHaQ2fNjWqkbcLXkl0OB7MlosBlsFqgVJrE40vvLAq_z36k9wU_MT24pfR6PrqEf2UtGJ3Px0HgLcYTkzXS4TSGP2je5Wzie4H_ww8n6Z-5v0GH_v8PDgAA

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0       
#define GRN 1        
#define RED 2
#define BTH 3           // aktywne oba modyfikatory (RED + GRN)
#define CFG 4           // konfiguracja Bluetooth

#define LSC(KEY) LS(LC(KEY))
#define LCA(KEY) LC(LA(KEY))
#define LSCA(KEY) LS(LC(LA(KEY)))

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM) \
        combo_##NAME { \
            timeout-ms = <TERM>; \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
        };

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
};

&caps_word {
    continue-list = <UNDERSCORE N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 BSPC DEL>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <GRN RED>;
            then-layer = <BTH>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

            //  |       0       |       1       |       2       |       3       |       4       |       |       5       |       6       |       7       |       8       |       9       |
        def_layer {
            bindings = <
                &lt CFG Q       &kp W           &kp E           &kp R           &kp T                   &kp Y           &kp U           &kp I           &kp O           &kp P
                &kp A           &kp S           &kp D           &kp F           &kp G                   &kp H           &kp J           &kp K           &kp L           &kp SEMI
                &mt LSHFT Z     &mt LWIN X      &mt LALT C      &mt LCTRL V     &kp B                   &kp N           &mt LCTRL M     &mt LALT COMMA  &mt LWIN DOT    &mt RSHFT SLASH
                                                                &mt LWIN ESC    &lt GRN ENTER           &lt RED SPACE   &mt RALT BKSP
            >;
        };

        grn_layer {
            bindings = <
                &none           &none           &none           &none           &none                   &none           &none           &none           &none           &none
                &kp N1          &kp N2          &kp N3          &kp N4          &kp MINUS               &kp EQUAL       &kp N7          &kp N8          &kp N9          &kp N0
                &kp LSHFT       &mt LWIN COLON  &mt LALT EQUAL  &mt LCTRL N5    &kp GRAVE               &kp SQT         &mt LCTRL N6    &mt LALT COMMA  &mt LWIN DOT    &mt RSHFT BSLH
                                                                &mt LWIN ESC    &trans                  &lt RED SPACE   &mt RALT BSPC
            >;
        };

        red_layer {
            bindings = <
                &none           &none           &none           &none           &none                   &none           &none           &none           &none           &none
                &kp F1          &kp F2          &kp F3          &kp F4          &kp LSC(B)              &kp LCA(UP)     &kp F7          &kp F8          &kp F9          &kp F10
                &kp LSHFT       &kp LWIN        &kp LALT        &mt LCTRL F5    &kp LS(ESC)             &kp LCA(DOWN)   &mt LCTRL F6    &kp LALT        &kp LWIN        &kp RSHFT
                                                                &mt LWIN ESC    &lt GRN ENTER           &trans          &mt RALT BSPC
            >;
        };

        bth_layer {
            bindings = <
                &none           &none           &none           &none           &none                   &none           &none           &none           &none           &none
                &none           &kp LG(LS(S))   &kp PSCRN       &none           &kp LG(EQUAL)           &kp PG_UP       &kp LEFT        &kp UP          &kp RIGHT       &none
                &kp LSHFT       &mt LWIN LC(X)  &mt LALT LC(C)  &mt LCTRL LC(V) &kp LG(MINUS)           &kp PG_DN       &kp HOME        &kp DOWN        &kp END         &kp RSHFT
                                                                &mt LWIN ESC    &trans                  &trans          &mt RALT BSPC
            >;
        };

        cfg_layer {
            bindings = <
                &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &none                   &none           &none           &none           &none           &none
                &none           &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5    &none                   &none           &none           &none           &none           &none
                &none           &bt BT_SEL 6    &bt BT_SEL 7    &bt BT_SEL 8    &none                   &none           &none           &none           &none           &none
                                                                &bt BT_CLR      &none                   &none           &none
            >;
        };
    };


    /*                KEY POSITIONS
    ╭────────────────────╮ ╭────────────────────╮
    │  0   1   2   3   4 │ │  5   6   7   8   9 │
    │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
    │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
    ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
                ╰────────╯ ╰────────╯         */

    combos {
        compatible = "zmk,combos";

// CAPS-WORD 
        combo_caps_word {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&caps_word>;
            layers = <DEF GRN>;
        };

// F11 i F12  
        combo_f11 {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp F11>;
            layers = <RED>;
        };

        combo_f12 {
            timeout-ms = <50>;
            key-positions = <16 26>;
            bindings = <&kp F12>;
            layers = <RED>;
        };

// BSLH (Back Slash)  
        combo_bslh {
            timeout-ms = <50>;
            key-positions = <19 29>;
            bindings = <&kp BSLH>;
            layers = <DEF>;
        };

// AT 
        combo_at {
            timeout-ms = <50>;
            key-positions = <14 24>;
            bindings = <&kp AT>;
            layers = <DEF GRN>;
        };

// CARET 
        combo_caret {
            timeout-ms = <50>;
            key-positions = <15 25>;
            bindings = <&kp CARET>;
            layers = <DEF GRN>;
        };

// STAR (mnożenie) 
        combo_star {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp STAR>;
            layers = <DEF GRN>;
        };

// SLASH (dzielenie) 
        combo_slash {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp SLASH>;
            layers = <DEF GRN>;
        };

// UNDER (podkreślenie) 
        combo_underscore {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp UNDER>;
            layers = <DEF GRN>;
        };

// PLUS
        combo_plus {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp PLUS>;
            layers = <DEF GRN>;
        };

// STAB 
        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12 13>;
            bindings = <&kp LS(TAB)>;
            layers = <DEF GRN>;
        };

// TAB 
        combo_tab {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp TAB>;
            layers = <DEF GRN>;
        };

// DEL 
        combo_del {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp DEL>;
            layers = <DEF GRN>;
        };
// DEL 
        combo_del {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp BSPC>;
            layers = <DEF GRN>;
        };

// wyjście z narzędzia magnifier (Win+Esc)        
        combo_magnifier_exit {
            timeout-ms = <50>;
            key-positions = <14 24>;
            bindings = <&kp LG(ESC)>;
            layers = <BTH>;
        };

// nawiasy        
        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <11 21>;
            bindings = <&kp LBRC>;
            layers = <DEF GRN>;
        };
        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <12 22>;
            bindings = <&kp LBKT>;
            layers = <DEF GRN>;
        };
        combo_lpar {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp LPAR>;
            layers = <DEF GRN>;
        };
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <16 26>;
            bindings = <&kp RPAR>;
            layers = <DEF GRN>;
        };
        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <17 27>;
            bindings = <&kp RBKT>;
            layers = <DEF GRN>;
        };
        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <18 28>;
            bindings = <&kp RBRC>;
            layers = <DEF GRN>;
        };
    };
};
